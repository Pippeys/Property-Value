geom_scatter()
lga_res = m1["residuals"]
m1["residuals"]
?ggplot
mutate(hw_data,lga_res = m1["residuals"])
dim(hw_data)
lga_res
dim(lga_res)
lga_res
as.data.frame(lga_res)
mutate(hw_data,as.data.frame(m1["residuals"]))
as.data.frame(m1["residuals"])
?mutate
mutate(hw_data,as.data.frame(m1["residuals"]))
class(as.data.frame(m1["residuals"]))
class(hw_data)
mutate(hw_data,test = as.data.frame(m1["residuals"]))
vignette("nse")
mutate(hw_data,test = quote(as.data.frame(m1["residuals"])))
mutate(hw_data,test = "m1[residuals]")
m1[3]
m1[4]
m1[1]
m1[2]
m1$residuals
as.data.frame(m1$residuals)
mutate(hw_data,test = as.data.frame(m1$residuals))
## 4
hw_data<-read.csv("/Users/jorda_000/Desktop/204b/Tworek&Cimpian_2016.csv")
## model 1
model1 = lm(Should_Score ~ Belief_in_Just_World, data = hw_data)
summary(model1)
## model 2
model2 = lm(Should_Score ~ Belief_in_Just_World + excluded + Good_Score, data = hw_data)
summary(model2)
## AIC
AIC(model1);AIC(model2)
## ANOVA
anova(model1,model2)
## Model 3
model3 = lm(Should_Score ~ Belief_in_Just_World*excluded*Good_Score, data = hw_data)
summary(model3)
## AIC
AIC(model2);AIC(model3)
## Anova
anova(model2,model3)
## full model
#Start backwards...
full.model = lm(Should_Score ~ excluded + RavensProgressiveMatrix_sum + Inherence_Bias + Good_Score + Ought_Score + Belief_in_Just_World, data = hw_data)
backwards.model = step(full.model, direction = c("backward"))
intercept.model = lm(Should_Score ~ 1, data = hw_data)
#start with intercept only model
forwards.model = step(intercept.model, direction = c("forward"), scope = ~excluded + RavensProgressiveMatrix_sum + Inherence_Bias + Good_Score + Ought_Score + Belief_in_Just_World)
putwd
pwd()
getwd()
head(data)
data <- read.csv("/Users/jorda_000/Dropbox/twerk werk/report1487397991820.csv")
library(tidyr)
library(dplyr)
library(ggplot2)
head(data)
?transmute
?filter
select(data, c("Zip.code", "Prop.sale.GRM", "Square.Footage City", "Last.Price"))
select(data, Zip.code, Prop.sale.GRM, Square.Footage City, Last.Price))
select(data, Zip.code, Prop.sale.GRM, Square.Footage, City, Last.Price))
select(data, Zip.code, Prop.sale.GRM, Square.Footage, City, Last.Price)
select(data, Zip.Code, Prop.sale.GRM, Square.Footage, City, Last.Price)
select(data, Zip.Code, Prop.Sale.GRM, Square.Footage, City, Last.Price)
data_test %>%
group_by(City) %>%
summarise(mVal = mean(Last.Price)) %>%
ggplot(aes(x = factor(City), y = mVal)) +
geom_bar(stat = "identity")
data %>%
group_by(City) %>%
summarise(mVal = mean(Last.Price)) %>%
ggplot(aes(x = factor(City), y = mVal)) +
geom_bar(stat = "identity")
?mean
data %>%
group_by(City) %>%
summarise(mVal = mean(Last.Price,na.rm = T)) %>%
ggplot(aes(x = factor(City), y = mVal)) +
geom_bar(stat = "identity")
data_test<-select(data, Zip.Code, Prop.Sale.GRM, Square.Footage, City, Last.Price)
data_test %>%
group_by(City) %>%
summarise(mVal = mean(Last.Price,na.rm = T)) %>%
ggplot(aes(x = factor(City), y = mVal)) +
geom_bar(stat = "identity")
data <- read.csv("/Users/jorda_000/Dropbox/twerk werk/Guuuuuuud Datar.csv")
data %>%
group_by(City) %>%
summarise(mVal = mean(Last.Price,na.rm = T)) %>%
ggplot(aes(x = factor(City), y = mVal)) +
geom_bar(stat = "identity")
data %>%
group_by(City) %>%
summarise(mVal = mean(Last.Price,na.rm = T)) %>%
ggplot(aes(x = factor(City), y = mVal)) +
geom_bar(stat = "identity") +
theme(axis.text.x=element_text(angle=90, size=8)
data %>%
group_by(City)
data %>%
group_by(City)
data %>%
group_by(City) %>%
summarise(mVal = mean(Last.Price,na.rm = T))
any(is.na(data) == T)
data <- read.csv("/Users/jorda_000/Dropbox/twerk werk/Guuuuuuud Datar.csv")
data %>%
group_by(Zip.Code) %>%
summarise(mVal = mean(Last.Price,na.rm = T)) %>%
ggplot(aes(x = factor(Zip.Code), y = mVal)) +
geom_bar(stat = "identity")
data %>%
group_by(Zip.Code) %>%
summarise(mVal = mean(Last.Price,na.rm = T)) %>%
ggplot(aes(x = factor(Zip.Code), y = mVal)) +
geom_bar(stat = "identity") +
theme(axis.text.x=element_text(angle=90, size=8))
data %>%
group_by(City) %>%
summarise(mVal = mean(Last.Price,na.rm = T)) %>%
ggplot(aes(x = factor(City), y = mVal)) +
geom_bar(stat = "identity") +
theme(axis.text.x=element_text(angle=90, size=8))
data %>%
group_by(City) %>%
summarise(ratchet = mean(Last.Price,na.rm = T)/mean(Square.Footage, na.rm = T)) %>%
ggplot(aes(x = factor(City), y = ratchet)) +
geom_bar(stat = "identity") +
theme(axis.text.x=element_text(angle=90, size=8))
data %>%
filter(City == "Danville")
data %>%
filter(City == "Dublin")
data %>%
ggplot(aes(x = Last.Price, y = Square.Footage)) +
geom_point()
data %>%
ggplot(aes(x = Last.Price, y = Square.Footage)) +
geom_point() +
stat_smooth(method = "lm")
lm(Last.Price ~ Square.Footage, data = data)
summary(lm(Last.Price ~ Square.Footage, data = data))
cor(data$Last.price,data$Square.Footage)
hw_data <- read.csv("/Users/jorda_000/Desktop/204b/cinteraction.csv")
head(hw_data)
lm(time ~ relevantknow*fluidint, data = hw_data)
plot(time,relevantknow, data = hw_data)
plot(hw_data$time,hw_data$relevantknow)
plot(hw_data$relevantknow, hw_data$time)
plot(hw_data$fluidint, hw_data$time)
summary(lm(time ~ relevantknow*fluidint, data = hw_data))
summary(lm(time ~ relevantknow*fluidint, data = hw_data))
summary(lm(time ~ relevantknow*fluidint, data = hw_data))
hw_data <- read.csv("/Users/jorda_000/Desktop/204b/cinteraction.csv")
summary(lm(time ~ relevantknow*fluidint, data = hw_data))
hw_data <- read.csv("/Users/jorda_000/Desktop/204b/cinteraction.csv")
summary(lm(time ~ relevantknow*fluidint, data = hw_data))
head(hw_data)
d <- read.csv("lab06dat1.csv")
d <- read.csv("/Users/jorda_000/Desktop/204b/lab06dat.csv")
head(d)
summary(d)
head(d)
n2sd <- -1*sd(d$perceivedfree)+mean(d$perceivedfree)
p2sd <- 1*sd(d$perceivedfree)+mean(d$perceivedfree)
csd <- mean(d$perceivedfree)
n2sd;csd;p2sd
head(hw_data)
n2sd <- -1*sd(hw_data$fluidint)+mean(hw_data$fluidint)
p2sd <- 1*sd(hw_data$fluidint)+mean(hw_data$fluidint)
csd <- mean(hw_data$fluidint)
n2sd;csd;p2sd
coef(m4)
coef(m1)
m1 = summary(lm(time ~ relevantknow*fluidint, data = hw_data))
coef(m1)
n2sd <- -1*sd(d$perceivedfree)+mean(d$perceivedfree)
p2sd <- 1*sd(d$perceivedfree)+mean(d$perceivedfree)
csd <- mean(d$perceivedfree)
n2sd;csd;p2sd
coef(m4)
d$hn2 <- coef(m4)[1] + coef(m4)[2]*n2sd +
coef(m4)[3]*d$independence + coef(m4)[4]*n2sd*d$independence
d$hcsd <- coef(m4)[1] + coef(m4)[2]*csd +
coef(m4)[3]*d$independence + coef(m4)[4]*csd*d$independence
d$hp2 <- coef(m4)[1] + coef(m4)[2]*p2sd +
coef(m4)[3]*d$independence + coef(m4)[4]*p2sd*d$independence
d <- d[order(d$independence),]
plot(d$independence,d$happy,
type = "n",
main = "Moderated Associations of Independence and Happiness",
ylab = "Association of Independence and Happiness",
xlab = "Independence Scores")
m1 = summary(lm(time ~ relevantknow*fluidint, data = hw_data))
n2sd <- -1*sd(hw_data$fluidint)+mean(hw_data$fluidint)
p2sd <- 1*sd(hw_data$fluidint)+mean(hw_data$fluidint)
csd <- mean(hw_data$fluidint)
n2sd;csd;p2sd
coef(m1)
hw_data$hn2 <- coef(m4)[1] + coef(m4)[2]*n2sd +
coef(m4)[3]*hw_data$relevantknow + coef(m4)[4]*n2sd*hw_data$relevantknow
hw_data$hcsd <- coef(m4)[1] + coef(m4)[2]*csd +
coef(m4)[3]*hw_data$relevantknow + coef(m4)[4]*csd*hw_data$relevantknow
hw_data$hp2 <- coef(m4)[1] + coef(m4)[2]*p2sd +
coef(m4)[3]*hw_data$relevantknow + coef(m4)[4]*p2sd*hw_data$relevantknow
coef(m1)
hw_data$hn2 <- coef(m1)[1] + coef(m1)[2]*n2sd +
coef(m1)[3]*hw_data$relevantknow + coef(m1)[4]*n2sd*hw_data$relevantknow
hw_data$hcsd <- coef(m1)[1] + coef(m1)[2]*csd +
coef(m1)[3]*hw_data$relevantknow + coef(m1)[4]*csd*hw_data$relevantknow
hw_data$hp2 <- coef(m1)[1] + coef(m1)[2]*p2sd +
coef(m1)[3]*hw_data$relevantknow + coef(m1)[4]*p2sd*hw_data$relevantknow
d <- d[order(d$independence),]
plot(hw_data$relevantknow,hw_data$time,
type = "n",
main = "Moderated Associations of Independence and Happiness",
ylab = "Association of Independence and Happiness",
xlab = "Independence Scores")
lines(hw_data$relevantknow,hw_data$hn2, lwd = 3, col = "blue")
hw_data
lines(hw_data$relevantknow, hw_data$hn2)
lines(hw_data$relevantknow, hw_data$hn2)
hw_data
hw_data
c(hw_data$relevantknow, hw_data$hn2)
plot(hw_data$relevantknow,hw_data$time,
type = "n",
main = "Moderated Associations of Independence and Happiness",
ylab = "Association of Independence and Happiness",
xlab = "Independence Scores")
plot(hw_data$relevantknow,hw_data$time,
type = "n")
lines(hw_data$relevantknow,hw_data$hn2, lwd = 3, col = "blue")
plot(hw_data$relevantknow,hw_data$time,
type = "n")
lines(hw_data$relevantknow,hw_data$hn2, lwd = 3, col = "blue")
lines(hw_data$independence,hw_data$hcsd, lwd = 3, col = "red")
lines(hw_data$independence, hw_data$hp2, lwd = 3, col = "green")
lines(hw_data$relevantknow,hw_data$hn2, lwd = 3, col = "blue")
lines(hw_data$relevantknow,hw_data$hcsd, lwd = 3, col = "red")
lines(hw_data$relevantknow, hw_data$hp2, lwd = 3, col = "green")
lines(c(0,0),c(0,10))
legend(-2,38,lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
plot(hw_data$relevantknow,hw_data$time)
lines(hw_data$relevantknow,hw_data$hn2, lwd = 3, col = "blue")
lines(hw_data$relevantknow,hw_data$hcsd, lwd = 3, col = "red")
lines(hw_data$relevantknow, hw_data$hp2, lwd = 3, col = "green")
plot(hw_data$relevantknow,hw_data$time)
lines(hw_data$relevantknow,hw_data$hn2, lwd = 3, col = "blue")
?lines
source('C:/Users/jorda_000/Desktop/PSC1Y/hw6.R', echo=TRUE)
plot(hw_data$relevantknow,hw_data$time)
lines(hw_data$relevantknow,hw_data$hn2)
plot(hw_data$relevantknow,hw_data$hn2)
plot(hw_data$relevantknow,hw_data$hcsd)
plot((hw_data$relevantknow, hw_data$hp2)
lines(c(0,0),c(0,10))
legend(-2,38,lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
plot(hw_data$relevantknow, hw_data$hp2)
plot(hw_data$relevantknow,hw_data$time)
plot(hw_data$relevantknow,hw_data$hn2)
lines
n2sd <- -1*sd(hw_data$relevantknow)+mean(hw_data$relevantknow)
n2sd <- -1*sd(hw_data$relevantknow)+mean(hw_data$relevantknow)
p2sd <- 1*sd(hw_data$relevantknow)+mean(hw_data$relevantknow)
csd <- mean(hw_data$fluidint)
nsd <- -1*sd(hw_data$relevantknow)+mean(hw_data$relevantknow)
psd <- 1*sd(hw_data$relevantknow)+mean(hw_data$relevantknow)
csd <- mean(hw_data$relevantknow)
mod1 = summary(lm(time ~ relevantknow*fluidint, data = hw_data))
psd = mean(cinter$relevantknow) + sd(cinter$relevantknow)
cinter <- read.csv("/Users/jorda_000/Desktop/204b/cinteraction.csv")
psd = mean(cinter$relevantknow) + sd(cinter$relevantknow)
nsd = mean(cinter$relevantknow) - sd(cinter$relevantknow)
csd = mean(cinter$relevantknow)
cof = c(coef(mod1))
cinter$psd = cof[1] + cof[2]*cinter$fluidint + cof[3]*p_sd + cof[4]*(psd*cinter$fluidint)
cinter$nsd = cof[1] + cof[2]*cinter$fluidint + cof[3]*n_sd + cof[4]*(nsd*cinter$fluidint)
psd = mean(cinter$relevantknow) + sd(cinter$relevantknow)
nsd = mean(cinter$relevantknow) - sd(cinter$relevantknow)
csd = mean(cinter$relevantknow)
cof = c(coef(mod1))
cinter$psd = cof[1] + cof[2]*cinter$fluidint + cof[3]*psd + cof[4]*(psd*cinter$fluidint)
cinter$nsd = cof[1] + cof[2]*cinter$fluidint + cof[3]*nsd + cof[4]*(nsd*cinter$fluidint)
cinter$csd = cof[1] + cof[2]*cinter$fluidint + cof[3]*csd + cof[4]*(csd*cinter$fluidint)
cinter <- cinter[order(cinter$fluidint),]
plot(cinter$fluidint, cinter$time,
type = "n",
main = "Moderated Associations of Fluid Intelligance and Problem Solving Time",
ylab = "Association of Fluid Int and Solving Time",
xlab = "Fluid Intelligence Scores")
lines(cinter$fluidint, cinter$psd, lwd = 3, col = "blue")
lines(cinter$fluidint, cinter$nsd, lwd = 3, col = "red")
lines(cinter$fluidint, cinter$csd,
lwd = 3, col = "green")
psd = mean(cinter$relevantknow) + sd(cinter$relevantknow)
nsd = mean(cinter$relevantknow) - sd(cinter$relevantknow)
csd = mean(cinter$relevantknow)
cof = c(coef(mod1))
cinter$psd = cof[1] + cof[2]*cinter$fluidint + cof[3]*psd + cof[4]*(psd*cinter$fluidint)
cinter$nsd = cof[1] + cof[2]*cinter$fluidint + cof[3]*nsd + cof[4]*(nsd*cinter$fluidint)
cinter$csd = cof[1] + cof[2]*cinter$fluidint + cof[3]*csd + cof[4]*(csd*cinter$fluidint)
cinter <- cinter[order(cinter$fluidint),]
cinter
mod1 = summary(lm(time ~ relevantknow*fluidint, data = hw_data))
psd = mean(cinter$relevantknow) + sd(cinter$relevantknow)
nsd = mean(cinter$relevantknow) - sd(cinter$relevantknow)
csd = mean(cinter$relevantknow)
cof = c(coef(mod1))
cinter$psd = cof[1] + cof[2]*cinter$fluidint + cof[3]*psd + cof[4]*(psd*cinter$fluidint)
cinter$nsd = cof[1] + cof[2]*cinter$fluidint + cof[3]*nsd + cof[4]*(nsd*cinter$fluidint)
cinter$csd = cof[1] + cof[2]*cinter$fluidint + cof[3]*csd + cof[4]*(csd*cinter$fluidint)
cinter <- cinter[order(cinter$fluidint),]
plot(cinter$fluidint, cinter$time,
type = "n",
main = "Moderated Associations of Fluid Intelligance and Problem Solving Time",
ylab = "Association of Fluid Int and Solving Time",
xlab = "Fluid Intelligence Scores")
lines(cinter$fluidint, cinter$psd, lwd = 3, col = "blue")
lines(cinter$fluidint, cinter$nsd, lwd = 3, col = "red")
lines(cinter$fluidint, cinter$csd,
lwd = 3, col = "green")
cof[4]
mod1 = summary(lm(time ~ relevantknow*fluidint, data = hw_data))
psd = mean(cinter$relevantknow) + sd(cinter$relevantknow)
nsd = mean(cinter$relevantknow) - sd(cinter$relevantknow)
csd = mean(cinter$relevantknow)
cof = c(coef(mod1))
cinter <- read.csv("/Users/jorda_000/Desktop/204b/cinteraction.csv")
cinter <- read.csv("/Users/jorda_000/Desktop/204b/cinteraction.csv")
mod1 = summary(lm(time ~ relevantknow*fluidint, data = hw_data))
psd = mean(cinter$relevantknow) + sd(cinter$relevantknow)
mod1 = summary(lm(time ~ relevantknow*fluidint, data = cinter))
psd = mean(cinter$relevantknow) + sd(cinter$relevantknow)
nsd = mean(cinter$relevantknow) - sd(cinter$relevantknow)
csd = mean(cinter$relevantknow)
cof = c(coef(mod1))
cinter$psd = cof[1] + cof[2]*cinter$fluidint + cof[3]*psd + cof[4]*(psd*cinter$fluidint)
cinter$nsd = cof[1] + cof[2]*cinter$fluidint + cof[3]*nsd + cof[4]*(nsd*cinter$fluidint)
cinter$csd = cof[1] + cof[2]*cinter$fluidint + cof[3]*csd + cof[4]*(csd*cinter$fluidint)
cinter <- cinter[order(cinter$fluidint),]
plot(cinter$fluidint, cinter$time,
type = "n",
main = "Moderated Associations of Fluid Intelligance and Problem Solving Time",
ylab = "Association of Fluid Int and Solving Time",
xlab = "Fluid Intelligence Scores")
lines(cinter$fluidint, cinter$psd, lwd = 3, col = "blue")
lines(cinter$fluidint, cinter$nsd, lwd = 3, col = "red")
lines(cinter$fluidint, cinter$csd,
lwd = 3, col = "green")
mod1 = lm(time ~ relevantknow*fluidint, data = cinter)
psd = mean(cinter$relevantknow) + sd(cinter$relevantknow)
nsd = mean(cinter$relevantknow) - sd(cinter$relevantknow)
csd = mean(cinter$relevantknow)
cof = c(coef(mod1))
cinter$psd = cof[1] + cof[2]*cinter$fluidint + cof[3]*psd + cof[4]*(psd*cinter$fluidint)
cinter$nsd = cof[1] + cof[2]*cinter$fluidint + cof[3]*nsd + cof[4]*(nsd*cinter$fluidint)
cinter$csd = cof[1] + cof[2]*cinter$fluidint + cof[3]*csd + cof[4]*(csd*cinter$fluidint)
cinter <- cinter[order(cinter$fluidint),]
plot(cinter$fluidint, cinter$time,
type = "n",
main = "Moderated Associations of Fluid Intelligance and Problem Solving Time",
ylab = "Association of Fluid Int and Solving Time",
xlab = "Fluid Intelligence Scores")
lines(cinter$fluidint, cinter$psd, lwd = 3, col = "blue")
lines(cinter$fluidint, cinter$nsd, lwd = 3, col = "red")
lines(cinter$fluidint, cinter$csd,
lwd = 3, col = "green")
mod1 = lm(time ~ relevantknow*fluidint, data = cinter)
mod
mod1
psd = mean(cinter$relevantknow) + sd(cinter$relevantknow)
nsd = mean(cinter$relevantknow) - sd(cinter$relevantknow)
csd = mean(cinter$relevantknow)
cof = c(coef(mod1))
cinter
cof
mod1 = lm(time ~ relevantknow*fluidint, data = cinter)
psd = mean(cinter$relevantknow) + sd(cinter$relevantknow)
nsd = mean(cinter$relevantknow) - sd(cinter$relevantknow)
c(0.01:0.01:0.1)
c(0.01:0.1)
c(100:110)
as.data.frame(rbind(c(100:110),c(1:10)))
as.data.frame(rbind(c(100:110),c(1:10)))
as.data.frame(cbind(c(100:110),c(1:10)))
as.data.frame(cbind(c(101:110),c(1:10)))
as.data.frame(cbind(c(101:110),c(1:10)))
plot(a$V1,a$V2)
a<- as.data.frame(cbind(c(101:110),c(1:10)))
plot(a$V1,a$V2)
?getwd
setwd("/Users/jorda_000/Dropbox/twerk werk/")
ls
ls()
ls(pwd())
ls(pwd)
read.table("Property Value/propers.RData")
read.dcf("Property Value/propers.RData"))
read.dcf("Property Value/propers.RData")
load("Property Value/propers.RData")
head(props)
load("Property Value/propers.RData")
head(props)
head(props)
```{r echo = T}
load("Property Value/propers.RData")
load("Property Value/propers.RData")
head(props)
```{r echo = T, eval = T}
```{r echo = T, eval = T}
load("Property Value/propers.RData")
head(props)
head(probs)
head(props)
head(Retailprops)
Retailprops %>%
ggplot(aes(x = LastPrice)) +
geom_hist()
library(dplyr)
library(dplyr)
library(ggplot2)
Retailprops %>%
ggplot(aes(x = LastPrice)) +
geom_hist()
Retailprops %>%
ggplot(aes(x = LastPrice)) +
geom_histogram()
head(Retailprops)
head(Retailprops)
head(Retailprops)
```{r}
Retailprops %>%
ggplot(aes(x = LastSale)) +
geom_histogram()
Retailprops %>%
ggplot(aes(x = Last Sale)) +
Retailprops %>%
ggplot(aes(x = `Last Price`)) +
geom_histogram()
props %>%
ggplot(aes(x = `Last Price`)) +
geom_histogram()
props %>%
ggplot(aes(x = `Last Price`)) +
geom_histogram() +
scale_fill_continuous(limits = c(0,1000000))
props %>%
ggplot(aes(x = `Last Price`)) +
geom_histogram() +
scale(ylim = c(0,1000000))
props %>%
ggplot(aes(x = `Last Price`)) +
geom_histogram() +
scale_y_discrete(ylim = c(0,1000000))
props %>%
ggplot(aes(x = `Last Price`)) +
geom_histogram() +
scale_y_discrete(limits = c(0,1000000))
props %>%
ggplot(aes(x = `Last Price`)) +
geom_histogram() +
scale_x_discrete(limits = c(0,1000000))
props %>%
ggplot(aes(x = `Last Price`)) +
geom_histogram() +
scale_x_discrete(limits = c(0,100000))
props %>%
ggplot(aes(x = `Last Price`)) +
geom_boxplot()
props %>%
ggplot(aes(y = `Last Price`)) +
geom_boxplot()
head(props)
View(props)
props %>%
ggplot(aes(x = PropertyType, y = `Last Price`)) +
geom_boxplot()
library(ggplot2)
library(dplyr)
load("Property Value/propers.RData")
load("Property Value/propers.RData")
head(props)
head(properties)
head(properties)
?is.na
?is.na.data.frame
!is.na(properties$`Last Price`)
head(properties)
properties$`Prop Sale GRM`
head(properties)
properties %>%
filter(!is.na(`Last Price`) & !is.na(properties$`Last Sale`) & !is.na(properties$PropertyType) & !is.na(properties$`Prop Sale GRM`))
cleaner <- properties %>%
filter(!is.na(`Last Price`) & !is.na(properties$`Last Sale`) & !is.na(properties$PropertyType) & !is.na(properties$`Prop Sale GRM`))
cleaner <- properties %>%
filter(!is.na(`Last Price`) & !is.na(properties$`Last Sale`) & !is.na(properties$PropertyType) & !is.na(properties$`Prop Sale GRM`) & !is.na(properties$`Zip Code`))
any(is.na(cleaner))
is.na(cleaner)
head(cleaner)
select(cleaner,Units)
putwd()
getwd()
